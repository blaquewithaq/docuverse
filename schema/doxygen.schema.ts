/* eslint-disable ts/no-use-before-define */
import type { Doxygen, DoxygenPage, DoxygenPageCompoundDef, DoxygenPageDescription, DoxygenPageDocBlockQuote, DoxygenPageDocCaption, DoxygenPageDocCopy, DoxygenPageDocDetails, DoxygenPageDocDotMsc, DoxygenPageDocEntry, DoxygenPageDocHeading, DoxygenPageDocImage, DoxygenPageDocImageFile, DoxygenPageDocInternal, DoxygenPageDocInternalS1, DoxygenPageDocInternalS2, DoxygenPageDocInternalS3, DoxygenPageDocInternalS4, DoxygenPageDocInternalS5, DoxygenPageDocInternalS6, DoxygenPageDocLanguage, DoxygenPageDocList, DoxygenPageDocListItem, DoxygenPageDocMarkup, DoxygenPageDocPara, DoxygenPageDocParamList, DoxygenPageDocParamListItem, DoxygenPageDocParBlock, DoxygenPageDocPlantuml, DoxygenPageDocRefText, DoxygenPageDocRow, DoxygenPageDocSect1, DoxygenPageDocSect2, DoxygenPageDocSect3, DoxygenPageDocSect4, DoxygenPageDocSect5, DoxygenPageDocSect6, DoxygenPageDocSimpleSect, DoxygenPageDocSummary, DoxygenPageDocTable, DoxygenPageDocTitle, DoxygenPageDocTocItem, DoxygenPageDocTocList, DoxygenPageDocURLLink, DoxygenPageDocVariableList, DoxygenPageDocVarListEntry, DoxygenPageDocXRefSect, DoxygenPageEnumValue, DoxygenPageMemberDef, DoxygenPageParam, DoxygenPageSectionDef, DoxygenPageTableOfContents, DoxygenPageTableOfContentsKind, DoxygenPageTableOfContentsName, DoxygenPageTemplateParamList } from "./doxygen.d"
// Generated by ts-to-zod
import { z } from "zod"

export const doxygenPageBoolSchema = z.union([
  z.literal("yes"),
  z.literal("no"),
])

export const doxygenPageGraphRelationSchema = z.union([
  z.literal("include"),
  z.literal("usage"),
  z.literal("template-instance"),
  z.literal("public-inheritance"),
  z.literal("protected-inheritance"),
  z.literal("private-inheritance"),
  z.literal("type-constraint"),
])

export const doxygenPageRefKindSchema = z.union([
  z.literal("compound"),
  z.literal("member"),
])

export const doxygenPageMemberKindSchema = z.union([
  z.literal("define"),
  z.literal("property"),
  z.literal("event"),
  z.literal("variable"),
  z.literal("typedef"),
  z.literal("enum"),
  z.literal("function"),
  z.literal("signal"),
  z.literal("prototype"),
  z.literal("friend"),
  z.literal("dcop"),
  z.literal("slot"),
  z.literal("interface"),
  z.literal("service"),
])

export const doxygenPageProtectionKindSchema = z.union([
  z.literal("public"),
  z.literal("protected"),
  z.literal("private"),
  z.literal("package"),
])

export const doxygenPageRefQualifierKindSchema = z.union([
  z.literal("lvalue"),
  z.literal("rvalue"),
])

export const doxygenPageLanguageSchema = z.union([
  z.literal("Unknown"),
  z.literal("IDL"),
  z.literal("Java"),
  z.literal("C#"),
  z.literal("D"),
  z.literal("PHP"),
  z.literal("Objective-C"),
  z.literal("C++"),
  z.literal("JavaScript"),
  z.literal("Python"),
  z.literal("Fortran"),
  z.literal("VHDL"),
  z.literal("XML"),
  z.literal("SQL"),
  z.literal("Markdown"),
  z.literal("Slice"),
  z.literal("Lex"),
])

export const doxygenPageVirtualKindSchema = z.union([
  z.literal("non-virtual"),
  z.literal("virtual"),
  z.literal("pure-virtual"),
])

export const doxygenPageCompoundKindSchema = z.union([
  z.literal("class"),
  z.literal("struct"),
  z.literal("union"),
  z.literal("interface"),
  z.literal("protocol"),
  z.literal("category"),
  z.literal("exception"),
  z.literal("service"),
  z.literal("singleton"),
  z.literal("module"),
  z.literal("type"),
  z.literal("file"),
  z.literal("namespace"),
  z.literal("group"),
  z.literal("page"),
  z.literal("example"),
  z.literal("dir"),
  z.literal("concept"),
])

export const doxygenPageSectionKindSchema = z.union([
  z.literal("user-defined"),
  z.literal("public-type"),
  z.literal("public-func"),
  z.literal("public-attrib"),
  z.literal("public-slot"),
  z.literal("signal"),
  z.literal("dcop-func"),
  z.literal("property"),
  z.literal("event"),
  z.literal("public-static-func"),
  z.literal("public-static-attrib"),
  z.literal("protected-type"),
  z.literal("protected-func"),
  z.literal("protected-attrib"),
  z.literal("protected-slot"),
  z.literal("protected-static-func"),
  z.literal("protected-static-attrib"),
  z.literal("package-type"),
  z.literal("package-func"),
  z.literal("package-attrib"),
  z.literal("package-static-func"),
  z.literal("package-static-attrib"),
  z.literal("private-type"),
  z.literal("private-func"),
  z.literal("private-attrib"),
  z.literal("private-slot"),
  z.literal("private-static-func"),
  z.literal("private-static-attrib"),
  z.literal("friend"),
  z.literal("related"),
  z.literal("define"),
  z.literal("prototype"),
  z.literal("typedef"),
  z.literal("enum"),
  z.literal("func"),
  z.literal("var"),
])

export const doxygenPageHighlightClassSchema = z.union([
  z.literal("comment"),
  z.literal("normal"),
  z.literal("preprocessor"),
  z.literal("keyword"),
  z.literal("keywordtype"),
  z.literal("keywordflow"),
  z.literal("stringliteral"),
  z.literal("xmlcdata"),
  z.literal("charliteral"),
  z.literal("vhdlkeyword"),
  z.literal("vhdllogic"),
  z.literal("vhdlchar"),
  z.literal("vhdldigit"),
])

export const doxygenPageSimpleSectKindSchema = z.union([
  z.literal("see"),
  z.literal("return"),
  z.literal("author"),
  z.literal("authors"),
  z.literal("version"),
  z.literal("since"),
  z.literal("date"),
  z.literal("note"),
  z.literal("warning"),
  z.literal("pre"),
  z.literal("post"),
  z.literal("copyright"),
  z.literal("invariant"),
  z.literal("remark"),
  z.literal("attention"),
  z.literal("important"),
  z.literal("par"),
  z.literal("rcs"),
])

export const doxygenPageCheckSchema = z.union([
  z.literal("checked"),
  z.literal("unchecked"),
])

export const doxygenPageVersionNumberSchema = z.string()

export const doxygenPageImageKindSchema = z.union([
  z.literal("html"),
  z.literal("latex"),
  z.literal("docbook"),
  z.literal("rtf"),
  z.literal("xml"),
])

export const doxygenPagePlantumlEngineSchema = z.union([
  z.literal("uml"),
  z.literal("bpm"),
  z.literal("wire"),
  z.literal("dot"),
  z.literal("ditaa"),
  z.literal("salt"),
  z.literal("math"),
  z.literal("latex"),
  z.literal("gantt"),
  z.literal("mindmap"),
  z.literal("wbs"),
  z.literal("yaml"),
  z.literal("creole"),
  z.literal("json"),
  z.literal("flow"),
  z.literal("board"),
  z.literal("git"),
  z.literal("hcl"),
  z.literal("regex"),
  z.literal("ebnf"),
  z.literal("files"),
])

export const doxygenPageParamListKindSchema = z.union([
  z.literal("param"),
  z.literal("retval"),
  z.literal("exception"),
  z.literal("templateparam"),
])

export const doxygenPageCharRangeSchema = z.string()

export const doxygenPageParamDirSchema = z.union([
  z.literal("in"),
  z.literal("out"),
  z.literal("inout"),
])

export const doxygenPageAccessorSchema = z.union([
  z.literal("retain"),
  z.literal("copy"),
  z.literal("assign"),
  z.literal("weak"),
  z.literal("strong"),
  z.literal("unretained"),
])

export const doxygenPageAlignSchema = z.union([
  z.literal("left"),
  z.literal("right"),
  z.literal("center"),
])

export const doxygenPageVerticalAlignSchema = z.union([
  z.literal("bottom"),
  z.literal("top"),
  z.literal("middle"),
])

export const doxygenPageOlSchema = z.union([
  z.literal("1"),
  z.literal("a"),
  z.literal("A"),
  z.literal("i"),
  z.literal("I"),
])

export const doxygenPageCompoundRefSchema = z.object({
  prot: doxygenPageProtectionKindSchema.optional(),
  refid: z.string().optional(),
  href: z.string().optional(),
  virt: doxygenPageVirtualKindSchema.optional(),
})

export const doxygenPageIncSchema = z.object({
  local: doxygenPageBoolSchema.optional(),
  refid: z.string().optional(),
  href: z.string().optional(),
})

export const doxygenPageRefSchema = z.object({
  inline: doxygenPageBoolSchema.optional(),
  prot: doxygenPageProtectionKindSchema.optional(),
  refid: z.string().optional(),
  href: z.string().optional(),
  text: z.string().optional(),
})

export const doxygenPageLocationSchema = z.object({
  bodyEnd: z.number().optional(),
  bodyFile: z.string().optional(),
  bodyStart: z.number().optional(),
  column: z.number().optional(),
  declColumn: z.number().optional(),
  declFile: z.string().optional(),
  declLine: z.number().optional(),
  file: z.string().optional(),
  line: z.number().optional(),
})

export const doxygenPageDocAnchorSchema = z.object({
  id: z.string().optional(),
})

export const doxygenPageDocEmojiSchema = z.object({
  name: z.string().optional(),
  unicode: z.string().optional(),
})

export const doxygenPageDocFormulaSchema = z.object({
  id: z.string().optional(),
})

export const doxygenPageDocEmptySchema = z.object({})

export const doxygenPageDocHtmlOnlySchema = z.object({
  block: z.string().optional(),
})

export const doxygenPageDocIndexEntrySchema = z.object({
  primary: z.string().optional(),
  secondary: z.string().optional(),
})

export const doxygenPageRefTextSchema = z.object({
  external: z.string().optional(),
  kindRef: doxygenPageRefKindSchema.optional(),
  refid: z.string().optional(),
  href: z.string().optional(),
  tooltip: z.string().optional(),
})

export const doxygenPageDocParamSchema = z.object({
  ref: doxygenPageRefTextSchema.optional(),
})

export const doxygenPageSpSchema = z.object({
  value: z.number().optional(),
})

export const doxygenPageChildNodeSchema = z.object({
  refid: z.union([z.string(), z.number()]).optional(),
  href: z.union([z.string(), z.number()]).optional(),
  relation: doxygenPageGraphRelationSchema.optional(),
  edgeLabel: z.array(z.string()).optional(),
})

export const doxygenPageLinkSchema = z.object({
  external: z.string().optional(),
  refid: z.string().optional(),
  href: z.string().optional(),
})

export const doxygenPageExportSchema = z.object({
  refid: z.string().optional(),
  href: z.string().optional(),
})

export const doxygenPageLinkedTextSchema = z.object({
  ref: z.array(doxygenPageRefTextSchema).optional(),
  text: z.string().optional(),
})

export const doxygenPageMemberRefSchema = z.object({
  ambiguityScope: z.string().optional(),
  prot: doxygenPageProtectionKindSchema.optional(),
  refid: z.string().optional(),
  href: z.string().optional(),
  virt: doxygenPageVirtualKindSchema.optional(),
  name: z.string().optional(),
  scope: z.string().optional(),
})

export const doxygenPageMemberSchema = z.object({
  kind: doxygenPageMemberKindSchema.optional(),
  refid: z.string().optional(),
  href: z.string().optional(),
  name: z.string().optional(),
})

export const doxygenPageReferenceSchema = z.object({
  compoundRef: z.string().optional(),
  endLine: z.number().optional(),
  refid: z.string().optional(),
  href: z.string().optional(),
  startLine: z.number().optional(),
})

export const doxygenPageReimplementSchema = z.object({
  refid: z.string().optional(),
  href: z.string().optional(),
})

export const doxygenIndexCompoundKindSchema = z.union([
  z.literal("category"),
  z.literal("class"),
  z.literal("concept"),
  z.literal("dir"),
  z.literal("example"),
  z.literal("exception"),
  z.literal("file"),
  z.literal("group"),
  z.literal("interface"),
  z.literal("module"),
  z.literal("namespace"),
  z.literal("page"),
  z.literal("protocol"),
  z.literal("struct"),
  z.literal("type"),
  z.literal("union"),
])

export const doxygenIndexMemberKindSchema = z.union([
  z.literal("dcop"),
  z.literal("define"),
  z.literal("enum"),
  z.literal("enumvalue"),
  z.literal("event"),
  z.literal("friend"),
  z.literal("function"),
  z.literal("property"),
  z.literal("prototype"),
  z.literal("signal"),
  z.literal("slot"),
  z.literal("typedef"),
  z.literal("variable"),
])

export const doxygenPageExportsSchema = z.object({
  export: z.array(doxygenPageExportSchema).optional(),
})

export const doxygenPageListOfAllMembersSchema = z.object({
  member: z.array(doxygenPageMemberRefSchema).optional(),
})

export const doxygenPageDocParamNameSchema = z.object({
  direction: doxygenPageParamDirSchema.optional(),
  ref: doxygenPageRefTextSchema.optional(),
})

export const doxygenPageHighlightSchema = z.object({
  class: doxygenPageHighlightClassSchema.optional(),
  ref: z.array(doxygenPageRefTextSchema).optional(),
  sp: z.array(doxygenPageSpSchema).optional(),
})

export const doxygenPageNodeSchema = z.object({
  id: z.union([z.string(), z.number()]).optional(),
  childNode: z.array(doxygenPageChildNodeSchema).optional(),
  label: z.string().optional(),
  link: doxygenPageLinkSchema.optional(),
})

export const doxygenIndexMemberSchema = z.object({
  name: z.string().optional(),
  refid: z.string().optional(),
  href: z.string().optional(),
  kind: doxygenIndexMemberKindSchema.optional(),
})

export const doxygenPageGraphSchema = z.object({
  node: z.array(doxygenPageNodeSchema).optional(),
})

export const doxygenPageDocParamNameListSchema = z.object({
  parameterName: z.array(doxygenPageDocParamNameSchema).optional(),
  parameterType: z.array(doxygenPageDocParamSchema).optional(),
})

export const doxygenPageCodeLineSchema = z.object({
  external: doxygenPageBoolSchema.optional(),
  lineno: z.number().optional(),
  refid: z.string().optional(),
  href: z.string().optional(),
  refKind: doxygenPageRefKindSchema.optional(),
  highlight: z.array(doxygenPageHighlightSchema).optional(),
})

export const doxygenIndexCompoundSchema = z.object({
  name: z.string().optional(),
  member: z.array(doxygenIndexMemberSchema).optional(),
  refid: z.string().optional(),
  href: z.string().optional(),
  kind: doxygenIndexCompoundKindSchema.optional(),
})

export const doxygenPageListingSchema = z.object({
  filename: z.string().optional(),
  codeLine: z.array(doxygenPageCodeLineSchema).optional(),
})

export const doxygenIndexSchema = z.object({
  compound: z.array(doxygenIndexCompoundSchema).optional(),
  lang: z.string().optional(),
})

export const doxygenPageSchema: z.ZodSchema<DoxygenPage> = z.lazy(() => z.object({
  compoundDef: z.array(doxygenPageCompoundDefSchema).optional(),
  lang: z.string().optional(),
}).refine(obj => obj.compoundDef || obj.lang, {
  message: "At least one of 'compoundDef', 'lang' must be defined",
}),
)

export const doxygenPageCompoundDefSchema: z.ZodSchema<DoxygenPageCompoundDef>
  = z.lazy(() => z.object({
    abstract: doxygenPageBoolSchema.optional(),
    final: doxygenPageBoolSchema.optional(),
    id: z.string().optional(),
    inline: doxygenPageBoolSchema.optional(),
    kind: doxygenPageCompoundKindSchema.optional(),
    language: z.array(doxygenPageLanguageSchema).optional(),
    prot: doxygenPageProtectionKindSchema.optional(),
    sealed: doxygenPageBoolSchema.optional(),
    baseCompoundRef: z.array(doxygenPageCompoundRefSchema).optional(),
    briefDescription: doxygenPageDescriptionSchema.optional(),
    collaborationGraph: doxygenPageGraphSchema.optional(),
    compoundName: z.string().optional(),
    derivedCompoundRef: z.array(doxygenPageCompoundRefSchema).optional(),
    detailedDescription: doxygenPageDescriptionSchema.optional(),
    exports: doxygenPageExportsSchema.optional(),
    incDepGraph: doxygenPageGraphSchema.optional(),
    includedBy: z.array(doxygenPageIncSchema).optional(),
    includes: z.array(doxygenPageIncSchema).optional(),
    inheritanceGraph: doxygenPageGraphSchema.optional(),
    initializer: z
      .union([doxygenPageLinkedTextSchema, z.string(), z.number()])
      .optional(),
    innerClass: z.array(doxygenPageRefSchema).optional(),
    innerConcept: z.array(doxygenPageRefSchema).optional(),
    innerDir: z.array(doxygenPageRefSchema).optional(),
    innerFile: z.array(doxygenPageRefSchema).optional(),
    innerGroup: z.array(doxygenPageRefSchema).optional(),
    innerModule: z.array(doxygenPageRefSchema).optional(),
    innerNamespace: z.array(doxygenPageRefSchema).optional(),
    innerPage: z.array(doxygenPageRefSchema).optional(),
    invIncDepGraph: doxygenPageGraphSchema.optional(),
    listOfAllMembers: doxygenPageListOfAllMembersSchema.optional(),
    location: doxygenPageLocationSchema.optional(),
    programListing: z.array(doxygenPageListingSchema).optional(),
    qualifier: z.array(z.string()).optional(),
    requiresClause: doxygenPageLinkedTextSchema.optional(),
    sectionDef: z.array(doxygenPageSectionDefSchema).optional(),
    tableOfContents: doxygenPageTableOfContentsSchema.optional(),
    templateParamList: doxygenPageTemplateParamListSchema.optional(),
    title: z.string().optional(),
  }).refine(obj => obj.abstract || obj.final || obj.id || obj.inline || obj.kind || obj.language || obj.prot || obj.sealed || obj.baseCompoundRef || obj.briefDescription || obj.collaborationGraph || obj.compoundName || obj.derivedCompoundRef || obj.detailedDescription || obj.exports || obj.incDepGraph || obj.includedBy || obj.includes || obj.inheritanceGraph || obj.initializer || obj.innerClass || obj.innerConcept || obj.innerDir || obj.innerFile || obj.innerGroup || obj.innerModule || obj.innerNamespace || obj.innerPage || obj.invIncDepGraph || obj.listOfAllMembers || obj.location || obj.programListing || obj.qualifier || obj.requiresClause || obj.sectionDef || obj.tableOfContents || obj.templateParamList || obj.title, {
    message: "At least one of 'abstract', 'final', 'id', 'inline', 'kind', 'language', 'prot', 'sealed', 'baseCompoundRef', 'briefDescription', 'collaborationGraph', 'compoundName', 'derivedCompoundRef', 'detailedDescription', 'exports', 'incDepGraph', 'includedBy', 'includes', 'inheritanceGraph', 'initializer', 'innerClass', 'innerConcept', 'innerDir', 'innerFile', 'innerGroup', 'innerModule', 'innerNamespace', 'innerPage', 'invIncDepGraph', 'listOfAllMembers', 'location', 'programListing', 'qualifier', 'requiresClause', 'sectionDef', 'tableOfContents', 'templateParamList', 'title' must be defined",
  }),
  )

export const doxygenPageDescriptionSchema: z.ZodSchema<DoxygenPageDescription>
  = z.lazy(() => z.object({
    internal: z.array(doxygenPageDocInternalSchema).optional(),
    para: z.array(z.union([doxygenPageDocParaSchema, z.string()])).optional(),
    sect1: z.array(doxygenPageDocSect1Schema).optional(),
    title: z.string().optional(),
  }).refine(obj => obj.internal || obj.para || obj.sect1 || obj.title, {
    message: "At least one of 'internal', 'para', 'sect1', 'title' must be defined",
  }),
  )

export const doxygenPageSectionDefSchema: z.ZodSchema<DoxygenPageSectionDef>
  = z.lazy(() => z.object({
    kind: doxygenPageSectionKindSchema.optional(),
    description: doxygenPageDescriptionSchema.optional(),
    header: z.string().optional(),
    member: z.array(doxygenPageMemberSchema).optional(),
    memberDef: z.array(doxygenPageMemberDefSchema).optional(),
  }).refine(obj => obj.kind || obj.description || obj.header || obj.member || obj.memberDef, {
    message: "At least one of 'kind', 'description', 'header', 'member', 'memberDef' must be defined",
  }),
  )

export const doxygenPageTableOfContentsSchema: z.ZodSchema<DoxygenPageTableOfContents>
  = z.lazy(() => z.object({
    tableOfContents: z.array(doxygenPageTableOfContentsSchema).optional(),
    tocSect: z.array(doxygenPageTableOfContentsKindSchema).optional(),
  }).refine(obj => obj.tableOfContents || obj.tocSect, {
    message: "At least one of 'tableOfContents', 'tocSect' must be defined",
  }),
  )

export const doxygenPageTemplateParamListSchema: z.ZodSchema<DoxygenPageTemplateParamList>
  = z.lazy(() => z.object({
    param: z.array(doxygenPageParamSchema).optional(),
  }).refine(obj => obj.param, {
    message: "At least one of 'param' must be defined",
  }),
  )

export const doxygenPageDocInternalSchema: z.ZodSchema<DoxygenPageDocInternal>
  = z.lazy(() => z.object({
    para: z.array(z.union([doxygenPageDocParaSchema, z.string()])).optional(),
    sect1: z.array(doxygenPageDocSect1Schema).optional(),
  }).refine(obj => obj.para || obj.sect1, {
    message: "At least one of 'para', 'sect1' must be defined",
  }),
  )

export const doxygenPageDocParaSchema: z.ZodSchema<DoxygenPageDocPara> = z.lazy(() => z.object({
  anchor: z.array(doxygenPageDocAnchorSchema).optional(),
  blockquote: z.array(doxygenPageDocBlockQuoteSchema).optional(),
  bold: z.array(doxygenPageDocMarkupSchema).optional(),
  center: z.array(doxygenPageDocMarkupSchema).optional(),
  cite: z.array(doxygenPageDocMarkupSchema).optional(),
  computerOutput: z.array(doxygenPageDocMarkupSchema).optional(),
  copyDoc: z.array(doxygenPageDocCopySchema).optional(),
  del: z.array(doxygenPageDocMarkupSchema).optional(),
  details: z.array(doxygenPageDocDetailsSchema).optional(),
  diaFile: z.array(doxygenPageDocImageFileSchema).optional(),
  docBookOnly: z.array(z.string()).optional(),
  dot: z.array(doxygenPageDocDotMscSchema).optional(),
  dotfile: z.array(doxygenPageDocImageFileSchema).optional(),
  emoji: z.array(doxygenPageDocEmojiSchema).optional(),
  emphasis: z.array(doxygenPageDocMarkupSchema).optional(),
  formula: z.array(doxygenPageDocFormulaSchema).optional(),
  heading: z.array(doxygenPageDocHeadingSchema).optional(),
  hruler: z.array(doxygenPageDocEmptySchema).optional(),
  htmlOnly: z.array(doxygenPageDocHtmlOnlySchema).optional(),
  image: z.array(doxygenPageDocImageSchema).optional(),
  indexEntry: z.array(doxygenPageDocIndexEntrySchema).optional(),
  ins: z.array(doxygenPageDocMarkupSchema).optional(),
  itemizedList: z.array(doxygenPageDocListSchema).optional(),
  javadocCode: z.array(z.string()).optional(),
  javadocLiteral: z.array(z.string()).optional(),
  language: z.array(doxygenPageDocLanguageSchema).optional(),
  latexOnly: z.array(z.string()).optional(),
  linebreak: z.array(doxygenPageDocEmptySchema).optional(),
  manOnly: z.array(z.string()).optional(),
  msc: z.array(doxygenPageDocDotMscSchema).optional(),
  mscfile: z.array(doxygenPageDocImageFileSchema).optional(),
  orderedList: z.array(doxygenPageDocListSchema).optional(),
  parameterList: z.array(doxygenPageDocParamListSchema).optional(),
  parBlock: z.array(doxygenPageDocParBlockSchema).optional(),
  plantUML: z.array(doxygenPageDocPlantumlSchema).optional(),
  plantUMLFile: z.array(doxygenPageDocImageFileSchema).optional(),
  preformatted: z.array(doxygenPageDocMarkupSchema).optional(),
  programListing: z.array(doxygenPageListingSchema).optional(),
  ref: z.array(doxygenPageDocRefTextSchema).optional(),
  rtfOnly: z.array(z.string()).optional(),
  s: z.array(doxygenPageDocMarkupSchema).optional(),
  simpleSect: z.array(doxygenPageDocSimpleSectSchema).optional(),
  small: z.array(doxygenPageDocMarkupSchema).optional(),
  strike: z.array(doxygenPageDocMarkupSchema).optional(),
  subscript: z.array(doxygenPageDocMarkupSchema).optional(),
  superscript: z.array(doxygenPageDocMarkupSchema).optional(),
  table: z.array(doxygenPageDocTableSchema).optional(),
  title: z.array(doxygenPageDocTitleSchema).optional(),
  tocList: z.array(doxygenPageDocTocListSchema).optional(),
  uLink: z.array(doxygenPageDocURLLinkSchema).optional(),
  underline: z.array(doxygenPageDocMarkupSchema).optional(),
  variableList: z.array(doxygenPageDocVariableListSchema).optional(),
  verbatim: z.array(z.string()).optional(),
  xmlOnly: z.array(z.string()).optional(),
  xRefSect: z.array(doxygenPageDocXRefSectSchema).optional(),
}).refine(obj => obj.anchor || obj.blockquote || obj.bold || obj.center || obj.cite || obj.computerOutput || obj.copyDoc || obj.del || obj.details || obj.diaFile || obj.docBookOnly || obj.dot || obj.dotfile || obj.emoji || obj.emphasis || obj.formula || obj.heading || obj.hruler || obj.htmlOnly || obj.image || obj.indexEntry || obj.ins || obj.itemizedList || obj.javadocCode || obj.javadocLiteral || obj.language || obj.latexOnly || obj.linebreak || obj.manOnly || obj.msc || obj.mscfile || obj.orderedList || obj.parameterList || obj.parBlock || obj.plantUML || obj.plantUMLFile || obj.preformatted || obj.programListing || obj.ref || obj.rtfOnly || obj.s || obj.simpleSect || obj.small || obj.strike || obj.subscript || obj.superscript || obj.table || obj.title || obj.tocList || obj.uLink || obj.underline || obj.variableList || obj.verbatim || obj.xmlOnly || obj.xRefSect, {
  message: "At least one of 'anchor', 'blockquote', 'bold', 'center', 'cite', 'computerOutput', 'copyDoc', 'del', 'details', 'diaFile', 'docBookOnly', 'dot', 'dotfile', 'emoji', 'emphasis', 'formula', 'heading', 'hruler', 'htmlOnly', 'image', 'indexEntry', 'ins', 'itemizedList', 'javadocCode', 'javadocLiteral', 'language', 'latexOnly', 'linebreak', 'manOnly', 'msc', 'mscfile', 'orderedList', 'parameterList', 'parBlock', 'plantUML', 'plantUMLFile', 'preformatted', 'programListing', 'ref', 'rtfOnly', 's', 'simpleSect', 'small', 'strike', 'subscript', 'superscript', 'table', 'title', 'tocList', 'uLink', 'underline', 'variableList', 'verbatim', 'xmlOnly', 'xRefSect' must be defined",
}),
)

export const doxygenPageDocSect1Schema: z.ZodSchema<DoxygenPageDocSect1>
  = z.lazy(() => z.object({
    id: z.string().optional(),
    internal: z.array(doxygenPageDocInternalS1Schema).optional(),
    para: z.array(z.union([doxygenPageDocParaSchema, z.string()])).optional(),
    sect2: z.array(doxygenPageDocSect2Schema).optional(),
    title: doxygenPageDocTitleSchema.optional(),
  }).refine(obj => obj.id || obj.internal || obj.para || obj.sect2 || obj.title, {
    message: "At least one of 'id', 'internal', 'para', 'sect2', 'title' must be defined",
  }),
  )

export const doxygenPageDocBlockQuoteSchema: z.ZodSchema<DoxygenPageDocBlockQuote>
  = z.lazy(() => z.object({
    para: z.array(z.union([doxygenPageDocParaSchema, z.string()])).optional(),
  }).refine(obj => obj.para, {
    message: "At least one of 'para' must be defined",
  }),
  )

export const doxygenPageDocMarkupSchema: z.ZodSchema<DoxygenPageDocMarkup>
  = z.lazy(() => z.object({
    anchor: z.array(doxygenPageDocAnchorSchema).optional(),
    blockquote: z.array(doxygenPageDocBlockQuoteSchema).optional(),
    bold: z.array(doxygenPageDocMarkupSchema).optional(),
    center: z.array(doxygenPageDocMarkupSchema).optional(),
    cite: z.array(doxygenPageDocMarkupSchema).optional(),
    computerOutput: z.array(doxygenPageDocMarkupSchema).optional(),
    copyDoc: z.array(doxygenPageDocCopySchema).optional(),
    del: z.array(doxygenPageDocMarkupSchema).optional(),
    details: z.array(doxygenPageDocDetailsSchema).optional(),
    diaFile: z.array(doxygenPageDocImageFileSchema).optional(),
    docBookOnly: z.array(z.string()).optional(),
    dot: z.array(doxygenPageDocDotMscSchema).optional(),
    dotfile: z.array(doxygenPageDocImageFileSchema).optional(),
    emoji: z.array(doxygenPageDocEmojiSchema).optional(),
    emphasis: z.array(doxygenPageDocMarkupSchema).optional(),
    formula: z.array(doxygenPageDocFormulaSchema).optional(),
    heading: z.array(doxygenPageDocHeadingSchema).optional(),
    hruler: z.array(doxygenPageDocEmptySchema).optional(),
    htmlOnly: z.array(doxygenPageDocHtmlOnlySchema).optional(),
    image: z.array(doxygenPageDocImageSchema).optional(),
    indexEntry: z.array(doxygenPageDocIndexEntrySchema).optional(),
    ins: z.array(doxygenPageDocMarkupSchema).optional(),
    itemizedList: z.array(doxygenPageDocListSchema).optional(),
    javadocCode: z.array(z.string()).optional(),
    javadocLiteral: z.array(z.string()).optional(),
    language: z.array(doxygenPageDocLanguageSchema).optional(),
    latexOnly: z.array(z.string()).optional(),
    linebreak: z.array(doxygenPageDocEmptySchema).optional(),
    manOnly: z.array(z.string()).optional(),
    msc: z.array(doxygenPageDocDotMscSchema).optional(),
    mscfile: z.array(doxygenPageDocImageFileSchema).optional(),
    orderedList: z.array(doxygenPageDocListSchema).optional(),
    parameterList: z.array(doxygenPageDocParamListSchema).optional(),
    parBlock: z.array(doxygenPageDocParBlockSchema).optional(),
    plantUML: z.array(doxygenPageDocPlantumlSchema).optional(),
    plantUMLFile: z.array(doxygenPageDocImageFileSchema).optional(),
    preformatted: z.array(doxygenPageDocMarkupSchema).optional(),
    programListing: z.array(doxygenPageListingSchema).optional(),
    ref: z.array(doxygenPageDocRefTextSchema).optional(),
    rtfOnly: z.array(z.string()).optional(),
    s: z.array(doxygenPageDocMarkupSchema).optional(),
    simpleSect: z.array(doxygenPageDocSimpleSectSchema).optional(),
    small: z.array(doxygenPageDocMarkupSchema).optional(),
    strike: z.array(doxygenPageDocMarkupSchema).optional(),
    subscript: z.array(doxygenPageDocMarkupSchema).optional(),
    superscript: z.array(doxygenPageDocMarkupSchema).optional(),
    table: z.array(doxygenPageDocTableSchema).optional(),
    title: z.array(doxygenPageDocTitleSchema).optional(),
    tocList: z.array(doxygenPageDocTocListSchema).optional(),
    uLink: z.array(doxygenPageDocURLLinkSchema).optional(),
    underline: z.array(doxygenPageDocMarkupSchema).optional(),
    variableList: z.array(doxygenPageDocVariableListSchema).optional(),
    verbatim: z.array(z.string()).optional(),
    xmlOnly: z.array(z.string()).optional(),
    xRefSect: z.array(doxygenPageDocXRefSectSchema).optional(),
  }).refine(obj => obj.anchor || obj.blockquote || obj.bold || obj.center || obj.cite || obj.computerOutput || obj.copyDoc || obj.del || obj.details || obj.diaFile || obj.docBookOnly || obj.dot || obj.dotfile || obj.emoji || obj.emphasis || obj.formula || obj.heading || obj.hruler || obj.htmlOnly || obj.image || obj.indexEntry || obj.ins || obj.itemizedList || obj.javadocCode || obj.javadocLiteral || obj.language || obj.latexOnly || obj.linebreak || obj.manOnly || obj.msc || obj.mscfile || obj.orderedList || obj.parameterList || obj.parBlock || obj.plantUML || obj.plantUMLFile || obj.preformatted || obj.programListing || obj.ref || obj.rtfOnly || obj.s || obj.simpleSect || obj.small || obj.strike || obj.subscript || obj.superscript || obj.table || obj.title || obj.tocList || obj.uLink || obj.underline || obj.variableList || obj.verbatim || obj.xmlOnly || obj.xRefSect, {
    message: "At least one of 'anchor', 'blockquote', 'bold', 'center', 'cite', 'computerOutput', 'copyDoc', 'del', 'details', 'diaFile', 'docBookOnly', 'dot', 'dotfile', 'emoji', 'emphasis', 'formula', 'heading', 'hruler', 'htmlOnly', 'image', 'indexEntry', 'ins', 'itemizedList', 'javadocCode', 'javadocLiteral', 'language', 'latexOnly', 'linebreak', 'manOnly', 'msc', 'mscfile', 'orderedList', 'parameterList', 'parBlock', 'plantUML', 'plantUMLFile', 'preformatted', 'programListing', 'ref', 'rtfOnly', 's', 'simpleSect', 'small', 'strike', 'subscript', 'superscript', 'table', 'title', 'tocList', 'uLink', 'underline', 'variableList', 'verbatim', 'xmlOnly', 'xRefSect' must be defined",
  }),
  )

export const doxygenPageDocCopySchema: z.ZodSchema<DoxygenPageDocCopy> = z.lazy(() => z.object({
  link: z.string().optional(),
  internal: doxygenPageDocInternalSchema.optional(),
  para: z.array(z.union([doxygenPageDocParaSchema, z.string()])).optional(),
  sect1: z.array(doxygenPageDocSect1Schema).optional(),
}).refine(obj => obj.link || obj.internal || obj.para || obj.sect1, {
  message: "At least one of 'link', 'internal', 'para', 'sect1' must be defined",
}),
)

export const doxygenPageDocDetailsSchema: z.ZodSchema<DoxygenPageDocDetails>
  = z.lazy(() => z.object({
    para: z.array(z.union([doxygenPageDocParaSchema, z.string()])).optional(),
    summary: doxygenPageDocSummarySchema.optional(),
  }).refine(obj => obj.para || obj.summary, {
    message: "At least one of 'para', 'summary' must be defined",
  }),
  )

export const doxygenPageDocImageFileSchema: z.ZodSchema<DoxygenPageDocImageFile>
  = z.lazy(() => z.object({
    height: z.string().optional(),
    name: z.string().optional(),
    width: z.string().optional(),
    anchor: z.array(doxygenPageDocAnchorSchema).optional(),
    bold: z.array(doxygenPageDocMarkupSchema).optional(),
    center: z.array(doxygenPageDocMarkupSchema).optional(),
    cite: z.array(doxygenPageDocMarkupSchema).optional(),
    computerOutput: z.array(doxygenPageDocMarkupSchema).optional(),
    del: z.array(doxygenPageDocMarkupSchema).optional(),
    docBookOnly: z.array(z.string()).optional(),
    dot: z.array(doxygenPageDocDotMscSchema).optional(),
    emoji: z.array(doxygenPageDocEmojiSchema).optional(),
    emphasis: z.array(doxygenPageDocMarkupSchema).optional(),
    formula: z.array(doxygenPageDocFormulaSchema).optional(),
    htmlOnly: z.array(doxygenPageDocHtmlOnlySchema).optional(),
    image: z.array(doxygenPageDocImageSchema).optional(),
    ins: z.array(doxygenPageDocMarkupSchema).optional(),
    latexOnly: z.array(z.string()).optional(),
    linebreak: z.array(doxygenPageDocEmptySchema).optional(),
    manOnly: z.array(z.string()).optional(),
    msc: z.array(doxygenPageDocDotMscSchema).optional(),
    plantUML: z.array(doxygenPageDocPlantumlSchema).optional(),
    ref: z.array(doxygenPageDocRefTextSchema).optional(),
    rtfOnly: z.array(z.string()).optional(),
    s: z.array(doxygenPageDocMarkupSchema).optional(),
    small: z.array(doxygenPageDocMarkupSchema).optional(),
    strike: z.array(doxygenPageDocMarkupSchema).optional(),
    subscript: z.array(doxygenPageDocMarkupSchema).optional(),
    superscript: z.array(doxygenPageDocMarkupSchema).optional(),
    uLink: z.array(doxygenPageDocURLLinkSchema).optional(),
    underline: z.array(doxygenPageDocMarkupSchema).optional(),
    xmlOnly: z.array(z.string()).optional(),
  }).refine(obj => obj.height || obj.name || obj.width || obj.anchor || obj.bold || obj.center || obj.cite || obj.computerOutput || obj.del || obj.docBookOnly || obj.dot || obj.emoji || obj.emphasis || obj.formula || obj.htmlOnly || obj.image || obj.ins || obj.latexOnly || obj.linebreak || obj.manOnly || obj.msc || obj.plantUML || obj.ref || obj.rtfOnly || obj.s || obj.small || obj.strike || obj.subscript || obj.superscript || obj.uLink || obj.underline || obj.xmlOnly, {
    message: "At least one of 'height', 'name', 'width', 'anchor', 'bold', 'center', 'cite', 'computerOutput', 'del', 'docBookOnly', 'dot', 'emoji', 'emphasis', 'formula', 'htmlOnly', 'image', 'ins', 'latexOnly', 'linebreak', 'manOnly', 'msc', 'plantUML', 'ref', 'rtfOnly', 's', 'small', 'strike', 'subscript', 'superscript', 'uLink', 'underline', 'xmlOnly' must be defined",
  }),
  )

export const doxygenPageDocDotMscSchema: z.ZodSchema<DoxygenPageDocDotMsc>
  = z.lazy(() => z.object({
    caption: z.string().optional(),
    height: z.string().optional(),
    name: z.string().optional(),
    width: z.string().optional(),
    anchor: z.array(doxygenPageDocAnchorSchema).optional(),
    bold: z.array(doxygenPageDocMarkupSchema).optional(),
    center: z.array(doxygenPageDocMarkupSchema).optional(),
    cite: z.array(doxygenPageDocMarkupSchema).optional(),
    computerOutput: z.array(doxygenPageDocMarkupSchema).optional(),
    del: z.array(doxygenPageDocMarkupSchema).optional(),
    docBookOnly: z.array(z.string()).optional(),
    dot: z.array(doxygenPageDocDotMscSchema).optional(),
    emoji: z.array(doxygenPageDocEmojiSchema).optional(),
    emphasis: z.array(doxygenPageDocMarkupSchema).optional(),
    formula: z.array(doxygenPageDocFormulaSchema).optional(),
    htmlOnly: z.array(doxygenPageDocHtmlOnlySchema).optional(),
    image: z.array(doxygenPageDocImageSchema).optional(),
    ins: z.array(doxygenPageDocMarkupSchema).optional(),
    latexOnly: z.array(z.string()).optional(),
    linebreak: z.array(doxygenPageDocEmptySchema).optional(),
    manOnly: z.array(z.string()).optional(),
    msc: z.array(doxygenPageDocDotMscSchema).optional(),
    plantUML: z.array(doxygenPageDocPlantumlSchema).optional(),
    ref: z.array(doxygenPageDocRefTextSchema).optional(),
    rtfOnly: z.array(z.string()).optional(),
    s: z.array(doxygenPageDocMarkupSchema).optional(),
    small: z.array(doxygenPageDocMarkupSchema).optional(),
    strike: z.array(doxygenPageDocMarkupSchema).optional(),
    subscript: z.array(doxygenPageDocMarkupSchema).optional(),
    superscript: z.array(doxygenPageDocMarkupSchema).optional(),
    uLink: z.array(doxygenPageDocURLLinkSchema).optional(),
    underline: z.array(doxygenPageDocMarkupSchema).optional(),
    xmlOnly: z.array(z.string()).optional(),
  }).refine(obj => obj.caption || obj.height || obj.name || obj.width || obj.anchor || obj.bold || obj.center || obj.cite || obj.computerOutput || obj.del || obj.docBookOnly || obj.dot || obj.emoji || obj.emphasis || obj.formula || obj.htmlOnly || obj.image || obj.ins || obj.latexOnly || obj.linebreak || obj.manOnly || obj.msc || obj.plantUML || obj.ref || obj.rtfOnly || obj.s || obj.small || obj.strike || obj.subscript || obj.superscript || obj.uLink || obj.underline || obj.xmlOnly, {
    message: "At least one of 'caption', 'height', 'name', 'width', 'anchor', 'bold', 'center', 'cite', 'computerOutput', 'del', 'docBookOnly', 'dot', 'emoji', 'emphasis', 'formula', 'htmlOnly', 'image', 'ins', 'latexOnly', 'linebreak', 'manOnly', 'msc', 'plantUML', 'ref', 'rtfOnly', 's', 'small', 'strike', 'subscript', 'superscript', 'uLink', 'underline', 'xmlOnly' must be defined",
  }),
  )

export const doxygenPageDocHeadingSchema: z.ZodSchema<DoxygenPageDocHeading>
  = z.lazy(() => z.object({
    level: z.number().optional(),
    anchor: z.array(doxygenPageDocAnchorSchema).optional(),
    bold: z.array(doxygenPageDocMarkupSchema).optional(),
    center: z.array(doxygenPageDocMarkupSchema).optional(),
    cite: z.array(doxygenPageDocMarkupSchema).optional(),
    computerOutput: z.array(doxygenPageDocMarkupSchema).optional(),
    del: z.array(doxygenPageDocMarkupSchema).optional(),
    docBookOnly: z.array(z.string()).optional(),
    dot: z.array(doxygenPageDocDotMscSchema).optional(),
    emoji: z.array(doxygenPageDocEmojiSchema).optional(),
    emphasis: z.array(doxygenPageDocMarkupSchema).optional(),
    formula: z.array(doxygenPageDocFormulaSchema).optional(),
    htmlOnly: z.array(doxygenPageDocHtmlOnlySchema).optional(),
    image: z.array(doxygenPageDocImageSchema).optional(),
    ins: z.array(doxygenPageDocMarkupSchema).optional(),
    latexOnly: z.array(z.string()).optional(),
    linebreak: z.array(doxygenPageDocEmptySchema).optional(),
    manOnly: z.array(z.string()).optional(),
    msc: z.array(doxygenPageDocDotMscSchema).optional(),
    plantUML: z.array(doxygenPageDocPlantumlSchema).optional(),
    ref: z.array(doxygenPageDocRefTextSchema).optional(),
    rtfOnly: z.array(z.string()).optional(),
    s: z.array(doxygenPageDocMarkupSchema).optional(),
    small: z.array(doxygenPageDocMarkupSchema).optional(),
    strike: z.array(doxygenPageDocMarkupSchema).optional(),
    subscript: z.array(doxygenPageDocMarkupSchema).optional(),
    superscript: z.array(doxygenPageDocMarkupSchema).optional(),
    uLink: z.array(doxygenPageDocURLLinkSchema).optional(),
    underline: z.array(doxygenPageDocMarkupSchema).optional(),
    xmlOnly: z.array(z.string()).optional(),
  }).refine(obj => obj.level || obj.anchor || obj.bold || obj.center || obj.cite || obj.computerOutput || obj.del || obj.docBookOnly || obj.dot || obj.emoji || obj.emphasis || obj.formula || obj.htmlOnly || obj.image || obj.ins || obj.latexOnly || obj.linebreak || obj.manOnly || obj.msc || obj.plantUML || obj.ref || obj.rtfOnly || obj.s || obj.small || obj.strike || obj.subscript || obj.superscript || obj.uLink || obj.underline || obj.xmlOnly, {
    message: "At least one of 'level', 'anchor', 'bold', 'center', 'cite', 'computerOutput', 'del', 'docBookOnly', 'dot', 'emoji', 'emphasis', 'formula', 'htmlOnly', 'image', 'ins', 'latexOnly', 'linebreak', 'manOnly', 'msc', 'plantUML', 'ref', 'rtfOnly', 's', 'small', 'strike', 'subscript', 'superscript', 'uLink', 'underline', 'xmlOnly' must be defined",
  }),
  )

export const doxygenPageDocImageSchema: z.ZodSchema<DoxygenPageDocImage>
  = z.lazy(() => z.object({
    alt: z.string().optional(),
    caption: z.string().optional(),
    height: z.string().optional(),
    inline: doxygenPageBoolSchema.optional(),
    name: z.string().optional(),
    type: doxygenPageImageKindSchema.optional(),
    width: z.string().optional(),
    anchor: z.array(doxygenPageDocAnchorSchema).optional(),
    bold: z.array(doxygenPageDocMarkupSchema).optional(),
    center: z.array(doxygenPageDocMarkupSchema).optional(),
    cite: z.array(doxygenPageDocMarkupSchema).optional(),
    computerOutput: z.array(doxygenPageDocMarkupSchema).optional(),
    del: z.array(doxygenPageDocMarkupSchema).optional(),
    docBookOnly: z.array(z.string()).optional(),
    dot: z.array(doxygenPageDocDotMscSchema).optional(),
    emoji: z.array(doxygenPageDocEmojiSchema).optional(),
    emphasis: z.array(doxygenPageDocMarkupSchema).optional(),
    formula: z.array(doxygenPageDocFormulaSchema).optional(),
    htmlOnly: z.array(doxygenPageDocHtmlOnlySchema).optional(),
    image: z.array(doxygenPageDocImageSchema).optional(),
    ins: z.array(doxygenPageDocMarkupSchema).optional(),
    latexOnly: z.array(z.string()).optional(),
    linebreak: z.array(doxygenPageDocEmptySchema).optional(),
    manOnly: z.array(z.string()).optional(),
    msc: z.array(doxygenPageDocDotMscSchema).optional(),
    plantUML: z.array(doxygenPageDocPlantumlSchema).optional(),
    ref: z.array(doxygenPageDocRefTextSchema).optional(),
    rtfOnly: z.array(z.string()).optional(),
    s: z.array(doxygenPageDocMarkupSchema).optional(),
    small: z.array(doxygenPageDocMarkupSchema).optional(),
    strike: z.array(doxygenPageDocMarkupSchema).optional(),
    subscript: z.array(doxygenPageDocMarkupSchema).optional(),
    superscript: z.array(doxygenPageDocMarkupSchema).optional(),
    uLink: z.array(doxygenPageDocURLLinkSchema).optional(),
    underline: z.array(doxygenPageDocMarkupSchema).optional(),
    xmlOnly: z.array(z.string()).optional(),
  }).refine(obj => obj.alt || obj.caption || obj.height || obj.inline || obj.name || obj.type || obj.width || obj.anchor || obj.bold || obj.center || obj.cite || obj.computerOutput || obj.del || obj.docBookOnly || obj.dot || obj.emoji || obj.emphasis || obj.formula || obj.htmlOnly || obj.image || obj.ins || obj.latexOnly || obj.linebreak || obj.manOnly || obj.msc || obj.plantUML || obj.ref || obj.rtfOnly || obj.s || obj.small || obj.strike || obj.subscript || obj.superscript || obj.uLink || obj.underline || obj.xmlOnly, {
    message: "At least one of 'alt', 'caption', 'height', 'inline', 'name', 'type', 'width', 'anchor', 'bold', 'center', 'cite', 'computerOutput', 'del', 'docBookOnly', 'dot', 'emoji', 'emphasis', 'formula', 'htmlOnly', 'image', 'ins', 'latexOnly', 'linebreak', 'manOnly', 'msc', 'plantUML', 'ref', 'rtfOnly', 's', 'small', 'strike', 'subscript', 'superscript', 'uLink', 'underline', 'xmlOnly' must be defined",
  }),
  )

export const doxygenPageDocListSchema: z.ZodSchema<DoxygenPageDocList> = z.lazy(() => z.object({
  start: z.number().optional(),
  type: doxygenPageOlSchema.optional(),
  listItem: z.array(doxygenPageDocListItemSchema).optional(),
}).refine(obj => obj.start || obj.type || obj.listItem, {
  message: "At least one of 'start', 'type', 'listItem' must be defined",
}),
)

export const doxygenPageDocLanguageSchema: z.ZodSchema<DoxygenPageDocLanguage>
  = z.lazy(() => z.object({
    langId: z.string().optional(),
    para: z.array(z.union([doxygenPageDocParaSchema, z.string()])).optional(),
  }).refine(obj => obj.langId || obj.para, {
    message: "At least one of 'langId', 'para' must be defined",
  }),
  )

export const doxygenPageDocParamListSchema: z.ZodSchema<DoxygenPageDocParamList>
  = z.lazy(() => z.object({
    kind: doxygenPageParamListKindSchema.optional(),
    parameterItem: z.array(doxygenPageDocParamListItemSchema).optional(),
  }).refine(obj => obj.kind || obj.parameterItem, {
    message: "At least one of 'kind', 'parameterItem' must be defined",
  }),
  )

export const doxygenPageDocParBlockSchema: z.ZodSchema<DoxygenPageDocParBlock>
  = z.lazy(() => z.object({
    para: z.array(z.union([doxygenPageDocParaSchema, z.string()])).optional(),
  }).refine(obj => obj.para, {
    message: "At least one of 'para' must be defined",
  }),
  )

export const doxygenPageDocPlantumlSchema: z.ZodSchema<DoxygenPageDocPlantuml>
  = z.lazy(() => z.object({
    caption: z.string().optional(),
    engine: doxygenPagePlantumlEngineSchema.optional(),
    height: z.string().optional(),
    name: z.string().optional(),
    width: z.string().optional(),
    anchor: z.array(doxygenPageDocAnchorSchema).optional(),
    bold: z.array(doxygenPageDocMarkupSchema).optional(),
    center: z.array(doxygenPageDocMarkupSchema).optional(),
    cite: z.array(doxygenPageDocMarkupSchema).optional(),
    computerOutput: z.array(doxygenPageDocMarkupSchema).optional(),
    del: z.array(doxygenPageDocMarkupSchema).optional(),
    docBookOnly: z.array(z.string()).optional(),
    dot: z.array(doxygenPageDocDotMscSchema).optional(),
    emoji: z.array(doxygenPageDocEmojiSchema).optional(),
    emphasis: z.array(doxygenPageDocMarkupSchema).optional(),
    formula: z.array(doxygenPageDocFormulaSchema).optional(),
    htmlOnly: z.array(doxygenPageDocHtmlOnlySchema).optional(),
    image: z.array(doxygenPageDocImageSchema).optional(),
    ins: z.array(doxygenPageDocMarkupSchema).optional(),
    latexOnly: z.array(z.string()).optional(),
    linebreak: z.array(doxygenPageDocEmptySchema).optional(),
    manOnly: z.array(z.string()).optional(),
    msc: z.array(doxygenPageDocDotMscSchema).optional(),
    plantUML: z.array(doxygenPageDocPlantumlSchema).optional(),
    ref: z.array(doxygenPageDocRefTextSchema).optional(),
    rtfOnly: z.array(z.string()).optional(),
    s: z.array(doxygenPageDocMarkupSchema).optional(),
    small: z.array(doxygenPageDocMarkupSchema).optional(),
    strike: z.array(doxygenPageDocMarkupSchema).optional(),
    subscript: z.array(doxygenPageDocMarkupSchema).optional(),
    superscript: z.array(doxygenPageDocMarkupSchema).optional(),
    uLink: z.array(doxygenPageDocURLLinkSchema).optional(),
    underline: z.array(doxygenPageDocMarkupSchema).optional(),
    xmlOnly: z.array(z.string()).optional(),
  }).refine(obj => obj.caption || obj.engine || obj.height || obj.name || obj.width || obj.anchor || obj.bold || obj.center || obj.cite || obj.computerOutput || obj.del || obj.docBookOnly || obj.dot || obj.emoji || obj.emphasis || obj.formula || obj.htmlOnly || obj.image || obj.ins || obj.latexOnly || obj.linebreak || obj.manOnly || obj.msc || obj.plantUML || obj.ref || obj.rtfOnly || obj.s || obj.small || obj.strike || obj.subscript || obj.superscript || obj.uLink || obj.underline || obj.xmlOnly, {
    message: "At least one of 'caption', 'engine', 'height', 'name', 'width', 'anchor', 'bold', 'center', 'cite', 'computerOutput', 'del', 'docBookOnly', 'dot', 'emoji', 'emphasis', 'formula', 'htmlOnly', 'image', 'ins', 'latexOnly', 'linebreak', 'manOnly', 'msc', 'plantUML', 'ref', 'rtfOnly', 's', 'small', 'strike', 'subscript', 'superscript', 'uLink', 'underline', 'xmlOnly' must be defined",
  }),
  )

export const doxygenPageDocRefTextSchema: z.ZodSchema<DoxygenPageDocRefText>
  = z.lazy(() => z.object({
    external: z.string().optional(),
    kindRef: doxygenPageRefKindSchema.optional(),
    refid: z.string().optional(),
    href: z.string().optional(),
    anchor: z.array(doxygenPageDocAnchorSchema).optional(),
    bold: z.array(doxygenPageDocMarkupSchema).optional(),
    center: z.array(doxygenPageDocMarkupSchema).optional(),
    cite: z.array(doxygenPageDocMarkupSchema).optional(),
    computerOutput: z.array(doxygenPageDocMarkupSchema).optional(),
    del: z.array(doxygenPageDocMarkupSchema).optional(),
    docBookOnly: z.array(z.string()).optional(),
    dot: z.array(doxygenPageDocDotMscSchema).optional(),
    emoji: z.array(doxygenPageDocEmojiSchema).optional(),
    emphasis: z.array(doxygenPageDocMarkupSchema).optional(),
    formula: z.array(doxygenPageDocFormulaSchema).optional(),
    htmlOnly: z.array(doxygenPageDocHtmlOnlySchema).optional(),
    image: z.array(doxygenPageDocImageSchema).optional(),
    ins: z.array(doxygenPageDocMarkupSchema).optional(),
    latexOnly: z.array(z.string()).optional(),
    linebreak: z.array(doxygenPageDocEmptySchema).optional(),
    manOnly: z.array(z.string()).optional(),
    msc: z.array(doxygenPageDocDotMscSchema).optional(),
    plantUML: z.array(doxygenPageDocPlantumlSchema).optional(),
    ref: z.array(doxygenPageDocRefTextSchema).optional(),
    rtfOnly: z.array(z.string()).optional(),
    s: z.array(doxygenPageDocMarkupSchema).optional(),
    small: z.array(doxygenPageDocMarkupSchema).optional(),
    strike: z.array(doxygenPageDocMarkupSchema).optional(),
    subscript: z.array(doxygenPageDocMarkupSchema).optional(),
    superscript: z.array(doxygenPageDocMarkupSchema).optional(),
    uLink: z.array(doxygenPageDocURLLinkSchema).optional(),
    underline: z.array(doxygenPageDocMarkupSchema).optional(),
    xmlOnly: z.array(z.string()).optional(),
  }).refine(obj => obj.external || obj.kindRef || obj.refid || obj.href || obj.anchor || obj.bold || obj.center || obj.cite || obj.computerOutput || obj.del || obj.docBookOnly || obj.dot || obj.emoji || obj.emphasis || obj.formula || obj.htmlOnly || obj.image || obj.ins || obj.latexOnly || obj.linebreak || obj.manOnly || obj.msc || obj.plantUML || obj.ref || obj.rtfOnly || obj.s || obj.small || obj.strike || obj.subscript || obj.superscript || obj.uLink || obj.underline || obj.xmlOnly, {
    message: "At least one of 'external', 'kindRef', 'refid', 'href', 'anchor', 'bold', 'center', 'cite', 'computerOutput', 'del', 'docBookOnly', 'dot', 'emoji', 'emphasis', 'formula', 'htmlOnly', 'image', 'ins', 'latexOnly', 'linebreak', 'manOnly', 'msc', 'plantUML', 'ref', 'rtfOnly', 's', 'small', 'strike', 'subscript', 'superscript', 'uLink', 'underline', 'xmlOnly' must be defined",
  }),
  )

export const doxygenPageDocSimpleSectSchema: z.ZodSchema<DoxygenPageDocSimpleSect>
  = z.lazy(() => z.object({
    kind: doxygenPageSimpleSectKindSchema.optional(),
    para: z.array(z.union([doxygenPageDocParaSchema, z.string()])).optional(),
    title: doxygenPageDocTitleSchema.optional(),
  }).refine(obj => obj.kind || obj.para || obj.title, {
    message: "At least one of 'kind', 'para', 'title' must be defined",
  }),
  )

export const doxygenPageDocTableSchema: z.ZodSchema<DoxygenPageDocTable>
  = z.lazy(() => z.object({
    cols: z.number().optional(),
    rows: z.number().optional(),
    width: z.string().optional(),
    caption: doxygenPageDocCaptionSchema.optional(),
    row: z.array(doxygenPageDocRowSchema).optional(),
  }).refine(obj => obj.cols || obj.rows || obj.width || obj.caption || obj.row, {
    message: "At least one of 'cols', 'rows', 'width', 'caption', 'row' must be defined",
  }),
  )

export const doxygenPageDocTitleSchema: z.ZodSchema<DoxygenPageDocTitle>
  = z.lazy(() => z.object({
    anchor: z.array(doxygenPageDocAnchorSchema).optional(),
    bold: z.array(doxygenPageDocMarkupSchema).optional(),
    center: z.array(doxygenPageDocMarkupSchema).optional(),
    cite: z.array(doxygenPageDocMarkupSchema).optional(),
    computerOutput: z.array(doxygenPageDocMarkupSchema).optional(),
    del: z.array(doxygenPageDocMarkupSchema).optional(),
    docBookOnly: z.array(z.string()).optional(),
    dot: z.array(doxygenPageDocDotMscSchema).optional(),
    emoji: z.array(doxygenPageDocEmojiSchema).optional(),
    emphasis: z.array(doxygenPageDocMarkupSchema).optional(),
    formula: z.array(doxygenPageDocFormulaSchema).optional(),
    htmlOnly: z.array(doxygenPageDocHtmlOnlySchema).optional(),
    image: z.array(doxygenPageDocImageSchema).optional(),
    ins: z.array(doxygenPageDocMarkupSchema).optional(),
    latexOnly: z.array(z.string()).optional(),
    linebreak: z.array(doxygenPageDocEmptySchema).optional(),
    manOnly: z.array(z.string()).optional(),
    msc: z.array(doxygenPageDocDotMscSchema).optional(),
    plantUML: z.array(doxygenPageDocPlantumlSchema).optional(),
    ref: z.array(doxygenPageDocRefTextSchema).optional(),
    rtfOnly: z.array(z.string()).optional(),
    s: z.array(doxygenPageDocMarkupSchema).optional(),
    small: z.array(doxygenPageDocMarkupSchema).optional(),
    strike: z.array(doxygenPageDocMarkupSchema).optional(),
    subscript: z.array(doxygenPageDocMarkupSchema).optional(),
    superscript: z.array(doxygenPageDocMarkupSchema).optional(),
    uLink: z.array(doxygenPageDocURLLinkSchema).optional(),
    underline: z.array(doxygenPageDocMarkupSchema).optional(),
    xmlOnly: z.array(z.string()).optional(),
  }).refine(obj => obj.anchor || obj.bold || obj.center || obj.cite || obj.computerOutput || obj.del || obj.docBookOnly || obj.dot || obj.emoji || obj.emphasis || obj.formula || obj.htmlOnly || obj.image || obj.ins || obj.latexOnly || obj.linebreak || obj.manOnly || obj.msc || obj.plantUML || obj.ref || obj.rtfOnly || obj.s || obj.small || obj.strike || obj.subscript || obj.superscript || obj.uLink || obj.underline || obj.xmlOnly, {
    message: "At least one of 'anchor', 'bold', 'center', 'cite', 'computerOutput', 'del', 'docBookOnly', 'dot', 'emoji', 'emphasis', 'formula', 'htmlOnly', 'image', 'ins', 'latexOnly', 'linebreak', 'manOnly', 'msc', 'plantUML', 'ref', 'rtfOnly', 's', 'small', 'strike', 'subscript', 'superscript', 'uLink', 'underline', 'xmlOnly' must be defined",
  }),
  )

export const doxygenPageDocTocListSchema: z.ZodSchema<DoxygenPageDocTocList>
  = z.lazy(() => z.object({
    tocItem: z.array(doxygenPageDocTocItemSchema).optional(),
  }).refine(obj => obj.tocItem, {
    message: "At least one of 'tocItem' must be defined",
  }),
  )

export const doxygenPageDocURLLinkSchema: z.ZodSchema<DoxygenPageDocURLLink>
  = z.lazy(() => z.object({
    url: z.string().optional(),
    anchor: z.array(doxygenPageDocAnchorSchema).optional(),
    bold: z.array(doxygenPageDocMarkupSchema).optional(),
    center: z.array(doxygenPageDocMarkupSchema).optional(),
    cite: z.array(doxygenPageDocMarkupSchema).optional(),
    computerOutput: z.array(doxygenPageDocMarkupSchema).optional(),
    del: z.array(doxygenPageDocMarkupSchema).optional(),
    docBookOnly: z.array(z.string()).optional(),
    dot: z.array(doxygenPageDocDotMscSchema).optional(),
    emoji: z.array(doxygenPageDocEmojiSchema).optional(),
    emphasis: z.array(doxygenPageDocMarkupSchema).optional(),
    formula: z.array(doxygenPageDocFormulaSchema).optional(),
    htmlOnly: z.array(doxygenPageDocHtmlOnlySchema).optional(),
    image: z.array(doxygenPageDocImageSchema).optional(),
    ins: z.array(doxygenPageDocMarkupSchema).optional(),
    latexOnly: z.array(z.string()).optional(),
    linebreak: z.array(doxygenPageDocEmptySchema).optional(),
    manOnly: z.array(z.string()).optional(),
    msc: z.array(doxygenPageDocDotMscSchema).optional(),
    plantUML: z.array(doxygenPageDocPlantumlSchema).optional(),
    ref: z.array(doxygenPageDocRefTextSchema).optional(),
    rtfOnly: z.array(z.string()).optional(),
    s: z.array(doxygenPageDocMarkupSchema).optional(),
    small: z.array(doxygenPageDocMarkupSchema).optional(),
    strike: z.array(doxygenPageDocMarkupSchema).optional(),
    subscript: z.array(doxygenPageDocMarkupSchema).optional(),
    superscript: z.array(doxygenPageDocMarkupSchema).optional(),
    uLink: z.array(doxygenPageDocURLLinkSchema).optional(),
    underline: z.array(doxygenPageDocMarkupSchema).optional(),
    xmlOnly: z.array(z.string()).optional(),
  }).refine(obj => obj.url || obj.anchor || obj.bold || obj.center || obj.cite || obj.computerOutput || obj.del || obj.docBookOnly || obj.dot || obj.emoji || obj.emphasis || obj.formula || obj.htmlOnly || obj.image || obj.ins || obj.latexOnly || obj.linebreak || obj.manOnly || obj.msc || obj.plantUML || obj.ref || obj.rtfOnly || obj.s || obj.small || obj.strike || obj.subscript || obj.superscript || obj.uLink || obj.underline || obj.xmlOnly, {
    message: "At least one of 'url', 'anchor', 'bold', 'center', 'cite', 'computerOutput', 'del', 'docBookOnly', 'dot', 'emoji', 'emphasis', 'formula', 'htmlOnly', 'image', 'ins', 'latexOnly', 'linebreak', 'manOnly', 'msc', 'plantUML', 'ref', 'rtfOnly', 's', 'small', 'strike', 'subscript', 'superscript', 'uLink', 'underline', 'xmlOnly' must be defined",
  }),
  )

export const doxygenPageDocVariableListSchema: z.ZodSchema<DoxygenPageDocVariableList>
  = z.lazy(() => z.object({
    listItem: z.array(doxygenPageDocListItemSchema).optional(),
    varListEntry: z.array(doxygenPageDocVarListEntrySchema).optional(),
  }).refine(obj => obj.listItem || obj.varListEntry, {
    message: "At least one of 'listItem', 'varListEntry' must be defined",
  }),
  )

export const doxygenPageDocXRefSectSchema: z.ZodSchema<DoxygenPageDocXRefSect>
  = z.lazy(() => z.object({
    id: z.string().optional(),
    xRefDescription: doxygenPageDescriptionSchema.optional(),
    xRefTitle: z.array(z.string()).optional(),
  }).refine(obj => obj.id || obj.xRefDescription || obj.xRefTitle, {
    message: "At least one of 'id', 'xRefDescription', 'xRefTitle' must be defined",
  }),
  )

export const doxygenPageDocInternalS1Schema: z.ZodSchema<DoxygenPageDocInternalS1>
  = z.lazy(() => z.object({
    para: z.array(z.union([doxygenPageDocParaSchema, z.string()])).optional(),
    sect2: z.array(doxygenPageDocSect2Schema).optional(),
  }).refine(obj => obj.para || obj.sect2, {
    message: "At least one of 'para', 'sect2' must be defined",
  }),
  )

export const doxygenPageDocSect2Schema: z.ZodSchema<DoxygenPageDocSect2>
  = z.lazy(() => z.object({
    id: z.string().optional(),
    internal: z.array(doxygenPageDocInternalS2Schema).optional(),
    para: z.array(z.union([doxygenPageDocParaSchema, z.string()])).optional(),
    sect3: z.array(doxygenPageDocSect3Schema).optional(),
    title: doxygenPageDocTitleSchema.optional(),
  }).refine(obj => obj.id || obj.internal || obj.para || obj.sect3 || obj.title, {
    message: "At least one of 'id', 'internal', 'para', 'sect3', 'title' must be defined",
  }),
  )

export const doxygenPageDocInternalS2Schema: z.ZodSchema<DoxygenPageDocInternalS2>
  = z.lazy(() => z.object({
    para: z.array(z.union([doxygenPageDocParaSchema, z.string()])).optional(),
    sect3: z.array(doxygenPageDocSect3Schema).optional(),
  }).refine(obj => obj.para || obj.sect3, {
    message: "At least one of 'para', 'sect3' must be defined",
  }),
  )

export const doxygenPageDocSect3Schema: z.ZodSchema<DoxygenPageDocSect3>
  = z.lazy(() => z.object({
    id: z.string().optional(),
    internal: z.array(doxygenPageDocInternalS3Schema).optional(),
    para: z.array(z.union([doxygenPageDocParaSchema, z.string()])).optional(),
    sect4: z.array(doxygenPageDocSect4Schema).optional(),
    title: doxygenPageDocTitleSchema.optional(),
  }).refine(obj => obj.id || obj.internal || obj.para || obj.sect4 || obj.title, {
    message: "At least one of 'id', 'internal', 'para', 'sect4', 'title' must be defined",
  }),
  )

export const doxygenPageDocInternalS3Schema: z.ZodSchema<DoxygenPageDocInternalS3>
  = z.lazy(() => z.object({
    para: z.array(z.union([doxygenPageDocParaSchema, z.string()])).optional(),
    sect4: z.array(doxygenPageDocSect4Schema).optional(),
  }).refine(obj => obj.para || obj.sect4, {
    message: "At least one of 'para', 'sect4' must be defined",
  }),
  )

export const doxygenPageDocSect4Schema: z.ZodSchema<DoxygenPageDocSect4>
  = z.lazy(() => z.object({
    id: z.string().optional(),
    internal: z.array(doxygenPageDocInternalS4Schema).optional(),
    para: z.array(z.union([doxygenPageDocParaSchema, z.string()])).optional(),
    sect5: z.array(doxygenPageDocSect5Schema).optional(),
    title: doxygenPageDocTitleSchema.optional(),
  }).refine(obj => obj.id || obj.internal || obj.para || obj.sect5 || obj.title, {
    message: "At least one of 'id', 'internal', 'para', 'sect5', 'title' must be defined",
  }),
  )

export const doxygenPageDocInternalS4Schema: z.ZodSchema<DoxygenPageDocInternalS4>
  = z.lazy(() => z.object({
    para: z.array(z.union([doxygenPageDocParaSchema, z.string()])).optional(),
    sect5: z.array(doxygenPageDocSect5Schema).optional(),
  }).refine(obj => obj.para || obj.sect5, {
    message: "At least one of 'para', 'sect5' must be defined",
  }),
  )

export const doxygenPageDocSect5Schema: z.ZodSchema<DoxygenPageDocSect5>
  = z.lazy(() => z.object({
    id: z.string().optional(),
    internal: z.array(doxygenPageDocInternalS5Schema).optional(),
    para: z.array(z.union([doxygenPageDocParaSchema, z.string()])).optional(),
    sect6: z.array(doxygenPageDocSect6Schema).optional(),
    title: doxygenPageDocTitleSchema.optional(),
  }).refine(obj => obj.id || obj.internal || obj.para || obj.sect6 || obj.title, {
    message: "At least one of 'id', 'internal', 'para', 'sect6', 'title' must be defined",
  }),
  )

export const doxygenPageDocInternalS5Schema: z.ZodSchema<DoxygenPageDocInternalS5>
  = z.lazy(() => z.object({
    para: z.array(z.union([doxygenPageDocParaSchema, z.string()])).optional(),
    sect5: z.array(doxygenPageDocSect6Schema).optional(),
  }).refine(obj => obj.para || obj.sect5, {
    message: "At least one of 'para', 'sect5' must be defined",
  }),
  )

export const doxygenPageDocSect6Schema: z.ZodSchema<DoxygenPageDocSect6>
  = z.lazy(() => z.object({
    id: z.string().optional(),
    internal: z.array(doxygenPageDocInternalS6Schema).optional(),
    para: z.array(z.union([doxygenPageDocParaSchema, z.string()])).optional(),
    title: doxygenPageDocTitleSchema.optional(),
  }).refine(obj => obj.id || obj.internal || obj.para || obj.title, {
    message: "At least one of 'id', 'internal', 'para', 'title' must be defined",
  }),
  )

export const doxygenPageDocInternalS6Schema: z.ZodSchema<DoxygenPageDocInternalS6>
  = z.lazy(() => z.object({
    para: z.array(z.union([doxygenPageDocParaSchema, z.string()])).optional(),
  }).refine(obj => obj.para, {
    message: "At least one of 'para' must be defined",
  }),
  )

export const doxygenPageDocCaptionSchema: z.ZodSchema<DoxygenPageDocCaption>
  = z.lazy(() => z.object({
    id: z.string().optional(),
    anchor: z.array(doxygenPageDocAnchorSchema).optional(),
    bold: z.array(doxygenPageDocMarkupSchema).optional(),
    center: z.array(doxygenPageDocMarkupSchema).optional(),
    cite: z.array(doxygenPageDocMarkupSchema).optional(),
    computerOutput: z.array(doxygenPageDocMarkupSchema).optional(),
    del: z.array(doxygenPageDocMarkupSchema).optional(),
    docBookOnly: z.array(z.string()).optional(),
    dot: z.array(doxygenPageDocDotMscSchema).optional(),
    emoji: z.array(doxygenPageDocEmojiSchema).optional(),
    emphasis: z.array(doxygenPageDocMarkupSchema).optional(),
    formula: z.array(doxygenPageDocFormulaSchema).optional(),
    htmlOnly: z.array(doxygenPageDocHtmlOnlySchema).optional(),
    image: z.array(doxygenPageDocImageSchema).optional(),
    ins: z.array(doxygenPageDocMarkupSchema).optional(),
    latexOnly: z.array(z.string()).optional(),
    linebreak: z.array(doxygenPageDocEmptySchema).optional(),
    manOnly: z.array(z.string()).optional(),
    msc: z.array(doxygenPageDocDotMscSchema).optional(),
    plantUML: z.array(doxygenPageDocPlantumlSchema).optional(),
    ref: z.array(doxygenPageDocRefTextSchema).optional(),
    rtfOnly: z.array(z.string()).optional(),
    s: z.array(doxygenPageDocMarkupSchema).optional(),
    small: z.array(doxygenPageDocMarkupSchema).optional(),
    strike: z.array(doxygenPageDocMarkupSchema).optional(),
    subscript: z.array(doxygenPageDocMarkupSchema).optional(),
    superscript: z.array(doxygenPageDocMarkupSchema).optional(),
    uLink: z.array(doxygenPageDocURLLinkSchema).optional(),
    underline: z.array(doxygenPageDocMarkupSchema).optional(),
    xmlOnly: z.array(z.string()).optional(),
  }).refine(obj => obj.id || obj.anchor || obj.bold || obj.center || obj.cite || obj.computerOutput || obj.del || obj.docBookOnly || obj.dot || obj.emoji || obj.emphasis || obj.formula || obj.htmlOnly || obj.image || obj.ins || obj.latexOnly || obj.linebreak || obj.manOnly || obj.msc || obj.plantUML || obj.ref || obj.rtfOnly || obj.s || obj.small || obj.strike || obj.subscript || obj.superscript || obj.uLink || obj.underline || obj.xmlOnly, {
    message: "At least one of 'id', 'anchor', 'bold', 'center', 'cite', 'computerOutput', 'del', 'docBookOnly', 'dot', 'emoji', 'emphasis', 'formula', 'htmlOnly', 'image', 'ins', 'latexOnly', 'linebreak', 'manOnly', 'msc', 'plantUML', 'ref', 'rtfOnly', 's', 'small', 'strike', 'subscript', 'superscript', 'uLink', 'underline', 'xmlOnly' must be defined",
  }),
  )

export const doxygenPageDocSummarySchema: z.ZodSchema<DoxygenPageDocSummary>
  = z.lazy(() => z.object({
    anchor: z.array(doxygenPageDocAnchorSchema).optional(),
    bold: z.array(doxygenPageDocMarkupSchema).optional(),
    center: z.array(doxygenPageDocMarkupSchema).optional(),
    cite: z.array(doxygenPageDocMarkupSchema).optional(),
    computerOutput: z.array(doxygenPageDocMarkupSchema).optional(),
    del: z.array(doxygenPageDocMarkupSchema).optional(),
    docBookOnly: z.array(z.string()).optional(),
    dot: z.array(doxygenPageDocDotMscSchema).optional(),
    emoji: z.array(doxygenPageDocEmojiSchema).optional(),
    emphasis: z.array(doxygenPageDocMarkupSchema).optional(),
    formula: z.array(doxygenPageDocFormulaSchema).optional(),
    htmlOnly: z.array(doxygenPageDocHtmlOnlySchema).optional(),
    image: z.array(doxygenPageDocImageSchema).optional(),
    ins: z.array(doxygenPageDocMarkupSchema).optional(),
    latexOnly: z.array(z.string()).optional(),
    linebreak: z.array(doxygenPageDocEmptySchema).optional(),
    manOnly: z.array(z.string()).optional(),
    msc: z.array(doxygenPageDocDotMscSchema).optional(),
    plantUML: z.array(doxygenPageDocPlantumlSchema).optional(),
    ref: z.array(doxygenPageDocRefTextSchema).optional(),
    rtfOnly: z.array(z.string()).optional(),
    s: z.array(doxygenPageDocMarkupSchema).optional(),
    small: z.array(doxygenPageDocMarkupSchema).optional(),
    strike: z.array(doxygenPageDocMarkupSchema).optional(),
    subscript: z.array(doxygenPageDocMarkupSchema).optional(),
    superscript: z.array(doxygenPageDocMarkupSchema).optional(),
    uLink: z.array(doxygenPageDocURLLinkSchema).optional(),
    underline: z.array(doxygenPageDocMarkupSchema).optional(),
    xmlOnly: z.array(z.string()).optional(),
  }).refine(obj => obj.anchor || obj.bold || obj.center || obj.cite || obj.computerOutput || obj.del || obj.docBookOnly || obj.dot || obj.emoji || obj.emphasis || obj.formula || obj.htmlOnly || obj.image || obj.ins || obj.latexOnly || obj.linebreak || obj.manOnly || obj.msc || obj.plantUML || obj.ref || obj.rtfOnly || obj.s || obj.small || obj.strike || obj.subscript || obj.superscript || obj.uLink || obj.underline || obj.xmlOnly, {
    message: "At least one of 'anchor', 'bold', 'center', 'cite', 'computerOutput', 'del', 'docBookOnly', 'dot', 'emoji', 'emphasis', 'formula', 'htmlOnly', 'image', 'ins', 'latexOnly', 'linebreak', 'manOnly', 'msc', 'plantUML', 'ref', 'rtfOnly', 's', 'small', 'strike', 'subscript', 'superscript', 'uLink', 'underline', 'xmlOnly' must be defined",
  }),
  )

export const doxygenPageDocEntrySchema: z.ZodSchema<DoxygenPageDocEntry>
  = z.lazy(() => z.object({
    align: doxygenPageAlignSchema.optional(),
    class: z.string().optional(),
    colSpan: z.number().optional(),
    rowSpan: z.number().optional(),
    thead: doxygenPageBoolSchema.optional(),
    valign: doxygenPageVerticalAlignSchema.optional(),
    width: z.string().optional(),
    para: z.array(z.union([doxygenPageDocParaSchema, z.string()])).optional(),
  }).refine(obj => obj.align || obj.class || obj.colSpan || obj.rowSpan || obj.thead || obj.valign || obj.width || obj.para, {
    message: "At least one of 'align', 'class', 'colSpan', 'rowSpan', 'thead', 'valign', 'width', 'para' must be defined",
  }),
  )

export const doxygenPageDocListItemSchema: z.ZodSchema<DoxygenPageDocListItem>
  = z.lazy(() => z.object({
    override: doxygenPageCheckSchema.optional(),
    value: z.number().optional(),
    para: z.array(z.union([doxygenPageDocParaSchema, z.string()])).optional(),
  }).refine(obj => obj.override || obj.value || obj.para, {
    message: "At least one of 'override', 'value', 'para' must be defined",
  }),
  )

export const doxygenPageDocParamListItemSchema: z.ZodSchema<DoxygenPageDocParamListItem>
  = z.lazy(() => z.object({
    parameterDescription: doxygenPageDescriptionSchema.optional(),
    parameterNameList: z.array(doxygenPageDocParamNameListSchema).optional(),
  }).refine(obj => obj.parameterDescription || obj.parameterNameList, {
    message: "At least one of 'parameterDescription', 'parameterNameList' must be defined",
  }),
  )

export const doxygenPageDocRowSchema: z.ZodSchema<DoxygenPageDocRow> = z.lazy(() => z.object({
  entry: z.array(doxygenPageDocEntrySchema).optional(),
}).refine(obj => obj.entry, {
  message: "At least one of 'entry' must be defined",
}),
)

export const doxygenPageDocTocItemSchema: z.ZodSchema<DoxygenPageDocTocItem>
  = z.lazy(() => z.object({
    id: z.string().optional(),
    anchor: z.array(doxygenPageDocAnchorSchema).optional(),
    bold: z.array(doxygenPageDocMarkupSchema).optional(),
    center: z.array(doxygenPageDocMarkupSchema).optional(),
    cite: z.array(doxygenPageDocMarkupSchema).optional(),
    computerOutput: z.array(doxygenPageDocMarkupSchema).optional(),
    del: z.array(doxygenPageDocMarkupSchema).optional(),
    docBookOnly: z.array(z.string()).optional(),
    dot: z.array(doxygenPageDocDotMscSchema).optional(),
    emoji: z.array(doxygenPageDocEmojiSchema).optional(),
    emphasis: z.array(doxygenPageDocMarkupSchema).optional(),
    formula: z.array(doxygenPageDocFormulaSchema).optional(),
    htmlOnly: z.array(doxygenPageDocHtmlOnlySchema).optional(),
    image: z.array(doxygenPageDocImageSchema).optional(),
    ins: z.array(doxygenPageDocMarkupSchema).optional(),
    latexOnly: z.array(z.string()).optional(),
    linebreak: z.array(doxygenPageDocEmptySchema).optional(),
    manOnly: z.array(z.string()).optional(),
    msc: z.array(doxygenPageDocDotMscSchema).optional(),
    plantUML: z.array(doxygenPageDocPlantumlSchema).optional(),
    ref: z.array(doxygenPageDocRefTextSchema).optional(),
    rtfOnly: z.array(z.string()).optional(),
    s: z.array(doxygenPageDocMarkupSchema).optional(),
    small: z.array(doxygenPageDocMarkupSchema).optional(),
    strike: z.array(doxygenPageDocMarkupSchema).optional(),
    subscript: z.array(doxygenPageDocMarkupSchema).optional(),
    superscript: z.array(doxygenPageDocMarkupSchema).optional(),
    uLink: z.array(doxygenPageDocURLLinkSchema).optional(),
    underline: z.array(doxygenPageDocMarkupSchema).optional(),
    xmlOnly: z.array(z.string()).optional(),
  }).refine(obj => obj.id || obj.anchor || obj.bold || obj.center || obj.cite || obj.computerOutput || obj.del || obj.docBookOnly || obj.dot || obj.emoji || obj.emphasis || obj.formula || obj.htmlOnly || obj.image || obj.ins || obj.latexOnly || obj.linebreak || obj.manOnly || obj.msc || obj.plantUML || obj.ref || obj.rtfOnly || obj.s || obj.small || obj.strike || obj.subscript || obj.superscript || obj.uLink || obj.underline || obj.xmlOnly, {
    message: "At least one of 'id', 'anchor', 'bold', 'center', 'cite', 'computerOutput', 'del', 'docBookOnly', 'dot', 'emoji', 'emphasis', 'formula', 'htmlOnly', 'image', 'ins', 'latexOnly', 'linebreak', 'manOnly', 'msc', 'plantUML', 'ref', 'rtfOnly', 's', 'small', 'strike', 'subscript', 'superscript', 'uLink', 'underline', 'xmlOnly' must be defined",
  }),
  )

export const doxygenPageDocVarListEntrySchema: z.ZodSchema<DoxygenPageDocVarListEntry>
  = z.lazy(() => z.object({
    term: doxygenPageDocTitleSchema.optional(),
  }).refine(obj => obj.term, {
    message: "At least one of 'term' must be defined",
  }),
  )

export const doxygenPageMemberDefSchema: z.ZodSchema<DoxygenPageMemberDef>
  = z.lazy(() => z.object({
    accessor: doxygenPageAccessorSchema.optional(),
    add: doxygenPageBoolSchema.optional(),
    attribute: doxygenPageBoolSchema.optional(),
    bound: doxygenPageBoolSchema.optional(),
    const: doxygenPageBoolSchema.optional(),
    constEval: doxygenPageBoolSchema.optional(),
    constExpr: doxygenPageBoolSchema.optional(),
    constInit: doxygenPageBoolSchema.optional(),
    constrained: doxygenPageBoolSchema.optional(),
    explicit: doxygenPageBoolSchema.optional(),
    extern: doxygenPageBoolSchema.optional(),
    final: doxygenPageBoolSchema.optional(),
    gettable: doxygenPageBoolSchema.optional(),
    id: z.string().optional(),
    initOnly: doxygenPageBoolSchema.optional(),
    inline: doxygenPageBoolSchema.optional(),
    kind: doxygenPageMemberKindSchema.optional(),
    maybeAmbiguous: doxygenPageBoolSchema.optional(),
    maybeDefault: doxygenPageBoolSchema.optional(),
    maybeVoid: doxygenPageBoolSchema.optional(),
    mutable: doxygenPageBoolSchema.optional(),
    new: doxygenPageBoolSchema.optional(),
    noDiscard: doxygenPageBoolSchema.optional(),
    noexcept: doxygenPageBoolSchema.optional(),
    noExceptExpression: z.string().optional(),
    optional: doxygenPageBoolSchema.optional(),
    privateGettable: doxygenPageBoolSchema.optional(),
    privateSettable: doxygenPageBoolSchema.optional(),
    property: doxygenPageBoolSchema.optional(),
    prot: doxygenPageProtectionKindSchema.optional(),
    protectedGettable: doxygenPageBoolSchema.optional(),
    protectedSettable: doxygenPageBoolSchema.optional(),
    raise: doxygenPageBoolSchema.optional(),
    readable: doxygenPageBoolSchema.optional(),
    readonly: doxygenPageBoolSchema.optional(),
    refQual: doxygenPageRefQualifierKindSchema.optional(),
    removable: doxygenPageBoolSchema.optional(),
    remove: doxygenPageBoolSchema.optional(),
    required: doxygenPageBoolSchema.optional(),
    sealed: doxygenPageBoolSchema.optional(),
    settable: doxygenPageBoolSchema.optional(),
    static: doxygenPageBoolSchema.optional(),
    strong: doxygenPageBoolSchema.optional(),
    transient: doxygenPageBoolSchema.optional(),
    virt: doxygenPageVirtualKindSchema.optional(),
    volatile: doxygenPageBoolSchema.optional(),
    writable: doxygenPageBoolSchema.optional(),
    argsString: z.string().optional(),
    bitField: z.string().optional(),
    briefdescription: doxygenPageDescriptionSchema.optional(),
    definition: z.string().optional(),
    detaileddescription: doxygenPageDescriptionSchema.optional(),
    enumValue: z
      .union([z.array(doxygenPageEnumValueSchema), z.string()])
      .optional(),
    exceptions: doxygenPageLinkedTextSchema.optional(),
    inBodyDescription: doxygenPageDescriptionSchema.optional(),
    initializer: z
      .union([doxygenPageLinkedTextSchema, z.string(), z.number()])
      .optional(),
    location: doxygenPageLocationSchema.optional(),
    name: z.string().optional(),
    param: z.array(doxygenPageParamSchema).optional(),
    qualifiedName: z.string().optional(),
    qualifier: z.array(z.string()).optional(),
    read: z.string().optional(),
    referencedBy: z.array(doxygenPageReferenceSchema).optional(),
    references: z.array(doxygenPageReferenceSchema).optional(),
    reimplementedBy: z.array(doxygenPageReimplementSchema).optional(),
    reimplements: z.array(doxygenPageReimplementSchema).optional(),
    requiresClause: doxygenPageLinkedTextSchema.optional(),
    templateParamList: doxygenPageTemplateParamListSchema.optional(),
    type: z.union([doxygenPageLinkedTextSchema, z.string()]).optional(),
    write: z.string().optional(),
  }).refine(obj => obj.accessor || obj.add || obj.attribute || obj.bound || obj.const || obj.constEval || obj.constExpr || obj.constInit || obj.constrained || obj.explicit || obj.extern || obj.final || obj.gettable || obj.id || obj.initOnly || obj.inline || obj.kind || obj.maybeAmbiguous || obj.maybeDefault || obj.maybeVoid || obj.mutable || obj.new || obj.noDiscard || obj.noexcept || obj.noExceptExpression || obj.optional || obj.privateGettable || obj.privateSettable || obj.property || obj.prot || obj.protectedGettable || obj.protectedSettable || obj.raise || obj.readable || obj.readonly || obj.refQual || obj.removable || obj.remove || obj.required || obj.sealed || obj.settable || obj.static || obj.strong || obj.transient || obj.virt || obj.volatile || obj.writable || obj.argsString || obj.bitField || obj.briefdescription || obj.definition || obj.detaileddescription || obj.enumValue || obj.exceptions || obj.inBodyDescription || obj.initializer || obj.location || obj.name || obj.param || obj.qualifiedName || obj.qualifier || obj.read || obj.referencedBy || obj.references || obj.reimplementedBy || obj.reimplements || obj.requiresClause || obj.templateParamList || obj.type || obj.write, {
    message: "At least one of 'accessor', 'add', 'attribute', 'bound', 'const', 'constEval', 'constExpr', 'constInit', 'constrained', 'explicit', 'extern', 'final', 'gettable', 'id', 'initOnly', 'inline', 'kind', 'maybeAmbiguous', 'maybeDefault', 'maybeVoid', 'mutable', 'new', 'noDiscard', 'noexcept', 'noExceptExpression', 'optional', 'privateGettable', 'privateSettable', 'property', 'prot', 'protectedGettable', 'protectedSettable', 'raise', 'readable', 'readonly', 'refQual', 'removable', 'remove', 'required', 'sealed', 'settable', 'static', 'strong', 'transient', 'virt', 'volatile', 'writable', 'argsString', 'bitField', 'briefdescription', 'definition', 'detaileddescription', 'enumValue', 'exceptions', 'inBodyDescription', 'initializer', 'location', 'name', 'param', 'qualifiedName', 'qualifier', 'read', 'referencedBy', 'references', 'reimplementedBy', 'reimplements', 'requiresClause', 'templateParamList', 'type', 'write' must be defined",
  }),
  )

export const doxygenPageEnumValueSchema: z.ZodSchema<DoxygenPageEnumValue>
  = z.lazy(() => z.object({
    id: z.string().optional(),
    prot: doxygenPageProtectionKindSchema.optional(),
    briefdescription: doxygenPageDescriptionSchema.optional(),
    detaileddescription: doxygenPageDescriptionSchema.optional(),
    initializer: z
      .union([doxygenPageLinkedTextSchema, z.string(), z.number()])
      .optional(),
    name: z.string().optional(),
  }).refine(obj => obj.id || obj.prot || obj.briefdescription || obj.detaileddescription || obj.initializer || obj.name, {
    message: "At least one of 'id', 'prot', 'briefdescription', 'detaileddescription', 'initializer', 'name' must be defined",
  }),
  )

export const doxygenPageParamSchema: z.ZodSchema<DoxygenPageParam> = z.lazy(() => z.object({
  array: z.string().optional(),
  attributes: z.string().optional(),
  briefdescription: doxygenPageDescriptionSchema.optional(),
  declName: z.string().optional(),
  defName: z.string().optional(),
  defVal: doxygenPageLinkedTextSchema.optional(),
  type: z.union([doxygenPageLinkedTextSchema, z.string()]).optional(),
  typeConstraint: doxygenPageLinkedTextSchema.optional(),
}).refine(obj => obj.array || obj.attributes || obj.briefdescription || obj.declName || obj.defName || obj.defVal || obj.type || obj.typeConstraint, {
  message: "At least one of 'array', 'attributes', 'briefdescription', 'declName', 'defName', 'defVal', 'type', 'typeConstraint' must be defined",
}),
)

export const doxygenPageTableOfContentsKindSchema: z.ZodSchema<DoxygenPageTableOfContentsKind>
  = z.lazy(() => z.object({
    docs: doxygenPageTableOfContentsNameSchema.optional(),
    name: z.string().optional(),
    reference: z.string().optional(),
    tableOfContents: z.array(doxygenPageTableOfContentsSchema).optional(),
  }).refine(obj => obj.docs || obj.name || obj.reference || obj.tableOfContents, {
    message: "At least one of 'docs', 'name', 'reference', 'tableOfContents' must be defined",
  }),
  )

export const doxygenPageTableOfContentsNameSchema: z.ZodSchema<DoxygenPageTableOfContentsName>
  = z.lazy(() => z.object({
    para: z.array(z.union([doxygenPageDocParaSchema, z.string()])).optional(),
  }).refine(obj => obj.para, {
    message: "At least one of 'para' must be defined",
  }),
  )

export const doxygenSchema: z.ZodSchema<Doxygen> = z.lazy(() => z.object({
  index: doxygenIndexSchema.optional(),
  doxygen: doxygenPageSchema.optional(),
}).refine(obj => obj.index || obj.doxygen, {
  message: "At least one of 'index', 'doxygen' must be defined",
}),
)
